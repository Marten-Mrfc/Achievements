"use strict";(self.webpackChunkachievements=self.webpackChunkachievements||[]).push([[6757],{9138:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"creatie/aanmaken","title":"Aanmaken","description":"Om een Achievement aan te maken gebruik je de functie:","source":"@site/docs/03-creatie/01-aanmaken.mdx","sourceDirName":"03-creatie","slug":"/creatie/aanmaken","permalink":"/Achievements/docs/creatie/aanmaken","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-creatie/01-aanmaken.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installatie","permalink":"/Achievements/docs/installatie"},"next":{"title":"Extras","permalink":"/Achievements/docs/creatie/extras"}}');var t=i(4848),r=i(8453),s=i(1470),c=i(9365);const l={},d="Aanmaken",u={},h=[];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"aanmaken",children:"Aanmaken"})}),"\n",(0,t.jsxs)(s.A,{groupId:"language",queryString:!0,children:[(0,t.jsxs)(c.A,{value:"java",label:"Java",default:!0,children:[(0,t.jsx)(n.p,{children:"Om een Achievement aan te maken gebruik je de functie:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"AchievementAPI.register();\n"})}),(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"de register functie heeft de volgende parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"String id: De unieke id van het achievement (Altijd lowercase!)."}),"\n",(0,t.jsx)(n.li,{children:"AchievementBuilder builder: De builder die het achievement bouwt."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@JvmStatic\npublic final fun register(\n    id: String,\n    builderAction: Consumer<AchievementBuilder>\n): Unit\n"})}),"\n"]}),(0,t.jsx)(n.p,{children:"Nu met deze kennis kunnen we een simpel achievement aanmaken:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'AchievementAPI.register("voorbeeld", builderConsumer -> {\n  builderConsumer.title("De titel");\n  builderConsumer.description("Een beschrijving");\n  builderConsumer.icon(Material.DIAMOND);\n});\n'})})]}),(0,t.jsxs)(c.A,{value:"kotlin",label:"Kotlin",children:[(0,t.jsx)(n.p,{children:"Om een Achievement aan te maken gebruik je de functie:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"AchievementAPI.register()\n"})}),(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"de register functie heeft de volgende parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"String id: De unieke id van het achievement."}),"\n",(0,t.jsx)(n.li,{children:"AchievementBuilder builder: De builder die het achievement bouwt."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"public final fun register(\n  id: String,\n  block: AchievementBuilder.() -> Unit\n): Unit\n"})}),"\n"]}),(0,t.jsx)(n.p,{children:"Nu met deze kennis kunnen we een simpel achievement aanmaken:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'AchievementAPI.register("voorbeeld") {\n  title("De titel")\n  description("Een beschrijving")\n  icon(Material.DIAMOND_SWORD)\n}\n'})})]})]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);