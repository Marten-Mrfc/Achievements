"use strict";(self.webpackChunkachievements=self.webpackChunkachievements||[]).push([[5872],{8475:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"installatie","title":"Installatie","description":"Dus je wilt achievements gebruiken in jouw gradle project? In welke bestand dan?","source":"@site/docs/02-installatie.mdx","sourceDirName":".","slug":"/installatie","permalink":"/Achievements/docs/installatie","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-installatie.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Achievements","permalink":"/Achievements/docs/intro"},"next":{"title":"Aanmaken","permalink":"/Achievements/docs/creatie/aanmaken"}}');var t=i(4848),a=i(8453),r=i(1470),l=i(9365);const c={},o="Installatie",d={},h=[{value:"Visualisatie van de loop",id:"visualisatie-van-de-loop",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"installatie",children:"Installatie"})}),"\n",(0,t.jsxs)(r.A,{groupId:"build-tool",queryString:!0,children:[(0,t.jsxs)(l.A,{value:"gradle",label:"Gradle",default:!0,children:[(0,t.jsx)(n.p,{children:"Dus je wilt achievements gebruiken in jouw gradle project? In welke bestand dan?"}),(0,t.jsxs)(r.A,{groupId:"language",queryString:!0,children:[(0,t.jsxs)(l.A,{value:"java",label:"build.gradle",default:!0,children:[(0,t.jsxs)(n.p,{children:["Voor een gradle project met een build.gradle bestand, gebruik de volgende configuratie:\n",(0,t.jsx)(n.strong,{children:"Repository:"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-groovy",children:"repositories {\n    maven { url 'https://jitpack.io' }\n}\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dependency:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-groovy",children:"dependencies {\n    compileOnly 'com.github.Marten-Mrfc:Achievements:main-SNAPSHOT'\n}\n"})})]}),(0,t.jsxs)(l.A,{value:"kotlin",label:"build.gradle.kts",children:[(0,t.jsxs)(n.p,{children:["Voor een gradle project met een build.gradle.kts bestand, gebruik de volgende configuratie:\n",(0,t.jsx)(n.strong,{children:"Repository:"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'repositories {\n    maven { url = uri("https://jitpack.io") }\n}\n'})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dependency:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'dependencies {\n    compileOnly("com.github.Marten-Mrfc:Achievements:main-SNAPSHOT")\n}\n'})})]})]})]}),(0,t.jsxs)(l.A,{value:"maven",label:"Maven",children:[(0,t.jsx)(n.p,{children:"Dus je wilt achievements gebruiken in jouw maven project? Gebruik deze maven configuratie:"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Repository:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<repository>\n    <id>jitpack.io</id>\n    <url>https://jitpack.io</url>\n</repository>\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dependency:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>com.github.Marten-Mrfc</groupId>\n    <artifactId>Achievements</artifactId>\n    <version>main-SNAPSHOT</version>\n    <scope>provided</scope>\n</dependency>\n"})})]})]}),"\n",(0,t.jsxs)(r.A,{groupId:"language",queryString:!0,children:[(0,t.jsxs)(l.A,{value:"java",label:"Java",default:!0,children:[(0,t.jsx)(n.p,{children:"Nu heb je succesvol de dependencies toegevoegd, maar hoe gebruik je het nu in jouw Java project?"}),(0,t.jsx)(n.p,{children:"Eerst maak je een register functie aan."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"private void registerCustomAchievements() {\n    // Deze vullen we later in (:\n}\n"})}),(0,t.jsx)(n.p,{children:"Vervolgens kan je of in je onEnable of in een extra functie de achievements link opstarten. Ik adviseer om een extra functie te maken zoals in het volgende voorbeeld:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'private void setupAchievements() {\n    try {\n        AchievementAPI.setReloadHandler(this.getName(), this::registerCustomAchievements);\n        registerCustomAchievements();\n        getLogger().info("Achievements setup complete.");\n    } catch (Exception e) {\n        getLogger().severe("Error setting up achievements: " + e.getMessage());\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"Nu als laatste roep je de setupAchievements functie aan in je onEnable functie."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Override\npublic void onEnable() {\n    getLogger().info("Setting up achievements with AchievementAPI...");\n    setupAchievements();\n}\n'})})]}),(0,t.jsxs)(l.A,{value:"kotlin",label:"Kotlin",children:[(0,t.jsx)(n.p,{children:"Nu heb je succesvol de dependencies toegevoegd, maar hoe gebruik je het nu in jouw Kotlin project?"}),(0,t.jsx)(n.p,{children:"Eerst maak je een register functie aan."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"private fun registerCustomAchievements() {\n    // Deze vullen we later in (:\n}\n"})}),(0,t.jsx)(n.p,{children:"Vervolgens kan je of in je onEnable of in een extra functie de achievements link opstarten. Ik adviseer om een extra functie te maken zoals in het volgende voorbeeld:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'private fun setupAchievements() {\n    try {\n        AchievementAPI.setReloadHandler(name) { registerCustomAchievements() }\n        registerCustomAchievements()\n        logger.info("Achievements setup complete.")\n    } catch (e: Exception) {\n        logger.severe("Error setting up achievements: ${e.message}")\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"Nu als laatste roep je de setupAchievements functie aan in je onEnable functie."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'override fun onEnable() {\n    logger.info("Setting up achievements with AchievementAPI...")\n    setupAchievements()\n}\n'})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"visualisatie-van-de-loop",children:"Visualisatie van de loop"}),"\n",(0,t.jsx)(n.p,{children:"Hier is een simpele visualisatie van de loop die achievements gebruikt om achievements te registreren en updaten."}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n  A[setupAchievements] --\x3e B[setReloadHandler]\n  B --\x3e C[ /achievements reload]\n  C --\x3e D[AchievementAPI triggerd de reloadHandler]\n  D --\x3e E[registerCustomAchievements wordt uitgevoerd]\n  E --\x3e F[achievements worden ge\xfcpdatet]\n  F --\x3e G[log complete]\n  G --\x3e C"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);